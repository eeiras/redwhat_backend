apiVersion: v1
kind: Template
metadata:
  name: keycloak-with-openshift-auth-provider-template
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.keycloak: >-
        {"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"keycloak"}}
    name: rwkeycloak
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: rwkeycloak
      service: rwkeycloak
    name: rwkeycloak
  spec:
    ports:
      - name: web
        port: 80
        protocol: TCP
        targetPort: 8080
    selector:
      app: rwkeycloak
      service: rwkeycloak
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: rwkeycloak
      service: rwkeycloak
    name: rwkeycloak
  spec:
    port:
      targetPort: web
    to:
      kind: Service
      name: rwkeycloak
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: rwkeycloak
      name: rwkeycloak
      service: rwkeycloak
    name: rwkeycloak
  spec:
    replicas: 1
    selector:
      app: rwkeycloak
      service: rwkeycloak
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: rwkeycloak
          service: rwkeycloak
      spec:
        containers:
        - env:
          - name: KEYCLOAK_USER
            value: admin
          - name: KEYCLOAK_PASSWORD
            value: ${KEYCLOAK_PASSWORD}
          image: 'docker.io/jboss/keycloak-openshift:3.4.0.Final'
          imagePullPolicy: IfNotPresent
          name: keycloak
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
parameters:
  - name: APPLICATION_NAME
    displayName: Application Name
    description: The name for the application.
    value: keycloak
    required: true
  - name: KEYCLOAK_USER
    displayName: Keycloak Administrator Username
    description: Keycloak Server administrator username
    generate: expression
    from: '[a-zA-Z0-9]{8}'
    required: true
  - name: KEYCLOAK_PASSWORD
    displayName: Keycloak Administrator Password
    description: Keycloak Server administrator password
    generate: expression
    from: '[a-zA-Z0-9]{8}'
    required: true
  - name: DB_VENDOR
    displayName: DB Vendor
    description: 'DB vendor (H2, POSTGRES, MYSQL or MARIADB)'
    value: H2
    required: true
  - name: HOSTNAME_HTTPS
    displayName: Custom https Route Hostname
    description: >-
      Custom hostname for https service route. Leave blank for default hostname,
      e.g.: <application-name>-<namespace>.<default-domain-suffix>
  - name: NAMESPACE
    displayName: Namespace used for DNS discovery
    description: >-
      This namespace is a part of DNS query sent to Kubernetes API. This query
      allows the DNS_PING protocol to extract cluster members. This parameter
      might be removed once https://issues.jboss.org/browse/JGRP-2292 is
      implemented.
    required: true